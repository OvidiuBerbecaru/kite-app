{"ast":null,"code":"var _jsxFileName = \"/Users/OviB/Desktop/kite-app/src/components/GoogleMap/GoogleMap.js\";\nimport React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './GoogleMap.scss';\nimport LocationPin from './LocationPin';\nimport SpotInfoCard from './SpotInfoCard';\nimport * as R from 'ramda';\n\nconst Map = ({\n  location,\n  zoomLevel,\n  className,\n  spots,\n  onToggleFavourites\n}) => {\n  const [openedSpot, setOpenedSpot] = useState({});\n\n  const onSpotClick = id => {\n    const spot = spots.filter(spot => spot.id === id)[0];\n    const {\n      name,\n      country,\n      month,\n      probability,\n      isFavouriteSpot\n    } = spot;\n    setOpenedSpot({\n      lat: Number(spot.lat),\n      lng: Number(spot.long),\n      name,\n      country,\n      month,\n      probability,\n      isFavouriteSpot,\n      id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `google-map ${className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: 'AIzaSyCDQY2Gatxh38awcCqZzSBF-BgwZzV2HVk'\n    },\n    defaultCenter: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    center: !R.isEmpty(openedSpot) ? {\n      lat: Number(openedSpot.lat),\n      lng: Number(openedSpot.lng)\n    } : null,\n    defaultZoom: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, spots && spots.map(spot => /*#__PURE__*/React.createElement(LocationPin, {\n    lat: spot.lat,\n    lng: spot.long,\n    isFavouriteSpot: spot.isFavouriteSpot,\n    onClick: onSpotClick,\n    id: spot.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), !R.isEmpty(openedSpot) && /*#__PURE__*/React.createElement(SpotInfoCard, Object.assign({}, openedSpot, {\n    onToggleFavourites: onToggleFavourites,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/OviB/Desktop/kite-app/src/components/GoogleMap/GoogleMap.js"],"names":["React","useState","GoogleMapReact","LocationPin","SpotInfoCard","R","Map","location","zoomLevel","className","spots","onToggleFavourites","openedSpot","setOpenedSpot","onSpotClick","id","spot","filter","name","country","month","probability","isFavouriteSpot","lat","Number","lng","long","key","isEmpty","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA,KAAlC;AAAyCC,EAAAA;AAAzC,CAAD,KAAmE;AAC7E,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMa,WAAW,GAAIC,EAAD,IAAQ;AAC1B,UAAMC,IAAI,GAAGN,KAAK,CAACO,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACD,EAAL,KAAYA,EAAjC,EAAqC,CAArC,CAAb;AACA,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA,WAAxB;AAAqCC,MAAAA;AAArC,QAAyDN,IAA/D;AACAH,IAAAA,aAAa,CAAC;AACZU,MAAAA,GAAG,EAAEC,MAAM,CAACR,IAAI,CAACO,GAAN,CADC;AAEZE,MAAAA,GAAG,EAAED,MAAM,CAACR,IAAI,CAACU,IAAN,CAFC;AAGZR,MAAAA,IAHY;AAIZC,MAAAA,OAJY;AAKZC,MAAAA,KALY;AAMZC,MAAAA,WANY;AAOZC,MAAAA,eAPY;AAQZP,MAAAA;AARY,KAAD,CAAb;AAUD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAG,cAAaN,SAAU,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAE;AAAEkB,MAAAA,GAAG,EAAE;AAAP,KADpB;AAEE,IAAA,aAAa,EAAE;AACbJ,MAAAA,GAAG,EAAE,KADQ;AAEbE,MAAAA,GAAG,EAAE;AAFQ,KAFjB;AAME,IAAA,MAAM,EACJ,CAACpB,CAAC,CAACuB,OAAF,CAAUhB,UAAV,CAAD,GACI;AAAEW,MAAAA,GAAG,EAAEC,MAAM,CAACZ,UAAU,CAACW,GAAZ,CAAb;AAA+BE,MAAAA,GAAG,EAAED,MAAM,CAACZ,UAAU,CAACa,GAAZ;AAA1C,KADJ,GAEI,IATR;AAWE,IAAA,WAAW,EAAE,CAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaIf,KAAK,IACLA,KAAK,CAACmB,GAAN,CAAUb,IAAI,iBACZ,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACO,GADZ;AAEE,IAAA,GAAG,EAAEP,IAAI,CAACU,IAFZ;AAGE,IAAA,eAAe,EAAEV,IAAI,CAACM,eAHxB;AAIE,IAAA,OAAO,EAAER,WAJX;AAKE,IAAA,EAAE,EAAEE,IAAI,CAACD,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdJ,EAwBI,CAACV,CAAC,CAACuB,OAAF,CAAUhB,UAAV,CAAD,iBACA,oBAAC,YAAD,oBAAkBA,UAAlB;AAA8B,IAAA,kBAAkB,EAAED,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzBJ,CADF,CADF;AAgCD,CAlDD;;AAoDA,eAAeL,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport './GoogleMap.scss'\nimport LocationPin from './LocationPin';\nimport SpotInfoCard from './SpotInfoCard';\nimport * as R from 'ramda';\n\nconst Map = ({ location, zoomLevel, className, spots, onToggleFavourites }) => {\n  const [ openedSpot, setOpenedSpot ] = useState({});\n\n  const onSpotClick = (id) => {\n    const spot = spots.filter(spot => spot.id === id)[0]\n    const { name, country, month, probability, isFavouriteSpot } = spot\n    setOpenedSpot({\n      lat: Number(spot.lat),\n      lng: Number(spot.long),\n      name,\n      country,\n      month,\n      probability,\n      isFavouriteSpot,\n      id\n    })\n  }\n\n  return (\n    <div className={`google-map ${className}`}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: 'AIzaSyCDQY2Gatxh38awcCqZzSBF-BgwZzV2HVk' }}\n        defaultCenter={{\n          lat: 59.95,\n          lng: 30.33\n        }}\n        center = {\n          !R.isEmpty(openedSpot)\n            ? { lat: Number(openedSpot.lat), lng: Number(openedSpot.lng)}\n            : null\n        }\n        defaultZoom={1}\n      >\n        { spots &&\n          spots.map(spot => \n            <LocationPin\n              lat={spot.lat}\n              lng={spot.long}\n              isFavouriteSpot={spot.isFavouriteSpot}\n              onClick={onSpotClick}\n              id={spot.id}\n            />  \n          )\n        }\n        { !R.isEmpty(openedSpot) &&\n          <SpotInfoCard {...openedSpot} onToggleFavourites={onToggleFavourites}/>\n        }\n      </GoogleMapReact>\n    </div>\n  )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}