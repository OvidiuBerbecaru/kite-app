{"ast":null,"code":"var _jsxFileName = \"/Users/OviB/Desktop/kite-app/src/providers/AuthProvider.js\";\nimport React, { createContext, useState, useContext } from 'react';\nimport { useCookies } from 'react-cookie';\nconst AuthContext = createContext({\n  isLoggedIn: false,\n  onSignIn: () => {},\n  onSignOut: () => {}\n});\n\nconst AuthProvider = props => {\n  const [cookies, setCookies, removeCookies] = useCookies(['tokenCookie']);\n  const [isLoggedIn, setIsLoggedIn] = useState(cookies.tokenCookie !== undefined);\n\n  const onSignIn = userId => {\n    setCookies('tokenCookie', userId, {\n      path: '/'\n    });\n    setIsLoggedIn(true);\n  };\n\n  const onSignOut = () => {\n    setIsLoggedIn(false);\n    removeCookies('tokenCookie');\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      isLoggedIn,\n      onSignIn,\n      onSignOut\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst useAuth = () => useContext(AuthContext);\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/Users/OviB/Desktop/kite-app/src/providers/AuthProvider.js"],"names":["React","createContext","useState","useContext","useCookies","AuthContext","isLoggedIn","onSignIn","onSignOut","AuthProvider","props","cookies","setCookies","removeCookies","setIsLoggedIn","tokenCookie","undefined","userId","path","useAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAMC,WAAW,GAAGJ,aAAa,CAAC;AAChCK,EAAAA,UAAU,EAAE,KADoB;AAEhCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFc;AAGhCC,EAAAA,SAAS,EAAE,MAAM,CAAE;AAHa,CAAD,CAAjC;;AAMA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,EAAsBC,aAAtB,IAAuCT,UAAU,CAAC,CAAC,aAAD,CAAD,CAAvD;AACA,QAAM,CAACE,UAAD,EAAaQ,aAAb,IAA8BZ,QAAQ,CAACS,OAAO,CAACI,WAAR,KAAwBC,SAAzB,CAA5C;;AAEA,QAAMT,QAAQ,GAAIU,MAAD,IAAY;AAC3BL,IAAAA,UAAU,CAAC,aAAD,EAAgBK,MAAhB,EAAwB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAxB,CAAV;AACAJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAMN,SAAS,GAAG,MAAM;AACtBM,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAD,IAAAA,aAAa,CAAC,aAAD,CAAb;AACD,GAHD;;AAKA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEP,MAAAA,UAAF;AAAcC,MAAAA,QAAd;AAAwBC,MAAAA;AAAxB;AADT,KAEME,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD,CApBD;;AAsBA,MAAMS,OAAO,GAAG,MAAMhB,UAAU,CAACE,WAAD,CAAhC;;AACA,SAASI,YAAT,EAAuBU,OAAvB","sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport { useCookies } from 'react-cookie';\n\nconst AuthContext = createContext({\n  isLoggedIn: false,\n  onSignIn: () => {},\n  onSignOut: () => {}\n});\n\nconst AuthProvider = (props) => {\n  const [cookies, setCookies, removeCookies] = useCookies(['tokenCookie']);\n  const [isLoggedIn, setIsLoggedIn] = useState(cookies.tokenCookie !== undefined);\n\n  const onSignIn = (userId) => {\n    setCookies('tokenCookie', userId, { path: '/' });\n    setIsLoggedIn(true);\n  };\n\n  const onSignOut = () => {\n    setIsLoggedIn(false);\n    removeCookies('tokenCookie');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn, onSignIn, onSignOut }}\n      {...props}\n    />\n  );\n};\n\nconst useAuth = () => useContext(AuthContext);\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}