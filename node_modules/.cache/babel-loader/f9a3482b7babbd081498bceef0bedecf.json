{"ast":null,"code":"var _jsxFileName = \"/Users/OviB/Desktop/kite-app/src/components/GoogleMap/GoogleMap.js\";\nimport React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './GoogleMap.scss';\nimport LocationPin from './LocationPin';\nimport SpotInfoCard from './SpotInfoCard';\nimport * as R from 'ramda';\n\nconst Map = ({\n  location,\n  zoomLevel,\n  className,\n  spots\n}) => {\n  const [openedSpot, setOpenedSpot] = useState({});\n\n  const onSpotClick = (lat, lng) => {\n    console.log(lat);\n    setOpenedSpot({\n      lat,\n      lng\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `google-map ${className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: 'AIzaSyCDQY2Gatxh38awcCqZzSBF-BgwZzV2HVk'\n    },\n    defaultCenter: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    center: !R.isEmpty(openedSpot) && {\n      lat: Number(openedSpot.lat),\n      lng: Number(openedSpot.lng)\n    },\n    defaultZoom: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, spots && spots.map(spot => /*#__PURE__*/React.createElement(LocationPin, {\n    lat: spot.lat,\n    lng: spot.long,\n    isFavouriteSpot: spot.isFavouriteSpot,\n    onClick: onSpotClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), !R.isEmpty(openedSpot) && /*#__PURE__*/React.createElement(SpotInfoCard, {\n    lat: openedSpot.lat,\n    lng: openedSpot.lng,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/OviB/Desktop/kite-app/src/components/GoogleMap/GoogleMap.js"],"names":["React","useState","GoogleMapReact","LocationPin","SpotInfoCard","R","Map","location","zoomLevel","className","spots","openedSpot","setOpenedSpot","onSpotClick","lat","lng","console","log","key","isEmpty","Number","map","spot","long","isFavouriteSpot"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA;AAAlC,CAAD,KAA+C;AACzD,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMY,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAF,IAAAA,aAAa,CAAC;AAAEE,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAG,cAAaN,SAAU,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAE;AAAES,MAAAA,GAAG,EAAE;AAAP,KADpB;AAEE,IAAA,aAAa,EAAE;AACbJ,MAAAA,GAAG,EAAE,KADQ;AAEbC,MAAAA,GAAG,EAAE;AAFQ,KAFjB;AAME,IAAA,MAAM,EACJ,CAACV,CAAC,CAACc,OAAF,CAAUR,UAAV,CAAD,IAA0B;AAAEG,MAAAA,GAAG,EAAEM,MAAM,CAACT,UAAU,CAACG,GAAZ,CAAb;AAA+BC,MAAAA,GAAG,EAAEK,MAAM,CAACT,UAAU,CAACI,GAAZ;AAA1C,KAP9B;AASE,IAAA,WAAW,EAAE,CATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWIL,KAAK,IACLA,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACZ,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACR,GADZ;AAEE,IAAA,GAAG,EAAEQ,IAAI,CAACC,IAFZ;AAGE,IAAA,eAAe,EAAED,IAAI,CAACE,eAHxB;AAIE,IAAA,OAAO,EAAEX,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZJ,EAqBI,CAACR,CAAC,CAACc,OAAF,CAAUR,UAAV,CAAD,iBACA,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,UAAU,CAACG,GAA9B;AAAmC,IAAA,GAAG,EAAEH,UAAU,CAACI,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADF,CADF;AA6BD,CArCD;;AAuCA,eAAeT,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport './GoogleMap.scss'\nimport LocationPin from './LocationPin';\nimport SpotInfoCard from './SpotInfoCard';\nimport * as R from 'ramda';\n\nconst Map = ({ location, zoomLevel, className, spots }) => {\n  const [ openedSpot, setOpenedSpot ] = useState({});\n\n  const onSpotClick = (lat, lng) => {\n    console.log(lat);\n    setOpenedSpot({ lat, lng })\n  }\n\n  return (\n    <div className={`google-map ${className}`}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: 'AIzaSyCDQY2Gatxh38awcCqZzSBF-BgwZzV2HVk' }}\n        defaultCenter={{\n          lat: 59.95,\n          lng: 30.33\n        }}\n        center = {\n          !R.isEmpty(openedSpot) && { lat: Number(openedSpot.lat), lng: Number(openedSpot.lng)}\n        }\n        defaultZoom={1}\n      >\n        { spots &&\n          spots.map(spot => \n            <LocationPin\n              lat={spot.lat}\n              lng={spot.long}\n              isFavouriteSpot={spot.isFavouriteSpot}\n              onClick={onSpotClick}\n            />  \n          )\n        }\n        { !R.isEmpty(openedSpot) &&\n          <SpotInfoCard lat={openedSpot.lat} lng={openedSpot.lng}/>\n        }\n      </GoogleMapReact>\n    </div>\n  )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}